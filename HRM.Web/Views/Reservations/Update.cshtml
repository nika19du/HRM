@model HRM.Data.Models.Reservation
@{
    ViewData["Title"] = "Update";
}
<h2>Update a Reservation for room:</h2>
<hr />
@{
    var name = ""; 
    if (TempData.ContainsKey("name"))
    {
        name = TempData["name"] as string;
    } 
}
<div class="border-info border mx-auto mt-5 col-md-5 col-12">
        <div class="ml-3 ">
            <h4>Room data:</h4>
            <p>Type: @name</p>
            <p>Capacity: @Model.Room.Capacity</p>
            <p>Adult price: @Model.Room.AdultPrice</p>
            <p>Children price: @Model.Room.ChildPrice</p>
        </div>
    </div>
    <hr />
    <div class="row">
        <div class="col-md-12">
            <form asp-action="Update" method="post">
                <div class="col-md-4 mx-auto">
                    <div asp-validation-summary="All" class="text-danger"></div>
                    <div class="form-group">
                        <label asp-for="CheckIn" class="control-label"></label>
                        <input asp-for="CheckIn" class="form-control" min="@DateTime.Today.ToString("yyyy-MM-dd")" id="acc-date" onchange="CheckDates()" />
                        <span asp-validation-for="CheckIn" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="CheckOut" class="control-label"></label>
                        <input asp-for="CheckOut" class="form-control" min="@DateTime.Today.ToString("yyyy-MM-dd")" id="rel-date" onchange="CheckDates()" />
                        <span asp-validation-for="CheckOut" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <span class="text-danger d-none" id="date-inval">Invalid date!</span>
                    </div>
                    <div class="form-group">
                        <span class="text-danger d-none" id="date-error">The room is already reserved in that period.</span>
                    </div>
                    <div class="form-group">
                        <label class="control-label">Number of Addults:</label>
                        <input type="number" min="0" max="@Model.Room.Capacity" asp-for="AddultCount" />
                        <span asp-validation-for="AddultCount" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label class="control-label">Number of Childs:</label>
                        <input type="number" min="0" max="@Model.Room.Capacity" asp-for="ChildCount" />
                        <span asp-validation-for="ChildCount" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <div class="checkbox">
                            <label>
                                <input asp-for="IsItAllInclusive" id="all-incl" />  @Html.DisplayName("All-Inclusive")
                            </label>
                        </div>
                        @*<small><strong>Note:</strong> AllInclusive price: @Model.AllInclusivePrice</small>*@
                    </div>
                    <div class="form-group">
                        <div class="checkbox">
                            <label>
                                <input asp-for="IncludeBreakfast" id="breakfast" />  @Html.DisplayName("Breakfast")
                            </label>
                        </div>
                        @*<small><strong>Note:</strong> Breakfast price: @Model.BreakfastPrice &diams; Breakfast included in allInclusive</small>*@
                    </div>
                </div>
                <div class="form-group">
                    <input type="submit" value="Update reservation" id="submit-but" class="btn btn-primary col-md-12" />
                </div>
            </form>
        </div>
    </div>
    @section Scripts{
        @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    }
    <script>
        function CheckDates() {
            isValidDate = false;
            var accDate = document.getElementById("acc-date");
            var relDate = document.getElementById("rel-date");
            var isPresentValid = false;
            if (new Date(accDate.value) < new Date() || new Date(relDate.value) < new Date() || new Date(relDate.value) <= new Date(accDate.value)) {
                document.getElementById("date-inval").style = "display:block!important";
                console.log("date invalid")
            }
            else {
                document.getElementById("date-inval").style = "display:none!important";
                console.log("date valid")
                isPresentValid = true;
            }
            if (accDate && accDate.value && relDate && relDate.value && isPresentValid) {
                var isTaken = false;
                periods.forEach(period => {
                    console.log(period.start, period.end, new Date(accDate.value), new Date(relDate.value));
                    if ((period.start > new Date(accDate.value) && period.start < new Date(relDate.value)) ||
                        (period.end > new Date(accDate.value) && period.end < new Date(relDate.value))) {
                        isTaken = true;
                    }
                });
                if (isTaken) {
                    document.getElementById("date-error").style = "display:block!important";
                    console.log("date taken")

                }
                else {
                    document.getElementById("date-error").style = "display:none!important";
                    console.log("date free")

                    isValidDate = true;
                }
            }
        }
    </script>
